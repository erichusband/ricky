var scopeCount = 0;
var mockThemes = [];
var webpackTreat = {
    addLocalCss: function () { },
    addThemedCss: function () { },
    addTheme: function (theme) { return mockThemes.push(theme); },
    getThemes: function () { return mockThemes; },
    getIdentName: function (local, _, theme) { return "" + (theme ? '_' : '') + local; },
};
export var setWebpackTreat = function (newWebpackTreat) {
    scopeCount = 0;
    webpackTreat = newWebpackTreat;
};
export var addLocalCss = function () {
    var props = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        props[_i] = arguments[_i];
    }
    return webpackTreat.addLocalCss.apply(webpackTreat, props);
};
export var addThemedCss = function () {
    var props = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        props[_i] = arguments[_i];
    }
    return webpackTreat.addThemedCss.apply(webpackTreat, props);
};
export var addTheme = function () {
    var props = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        props[_i] = arguments[_i];
    }
    return webpackTreat.addTheme.apply(webpackTreat, props);
};
export var getThemes = function () {
    var props = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        props[_i] = arguments[_i];
    }
    return webpackTreat.getThemes.apply(webpackTreat, props);
};
export var getIdentName = function () {
    var props = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        props[_i] = arguments[_i];
    }
    return webpackTreat.getIdentName.apply(webpackTreat, props);
};
export var getNextScope = function () { return scopeCount++; };
