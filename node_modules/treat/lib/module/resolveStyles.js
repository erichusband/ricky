import { resolveClassName } from './resolveClassName';
var cache = new Map();
export var resolveStyles = function (themeRef, styles) {
    var themeCache = cache.get(themeRef);
    if (themeCache) {
        var cachedResolvedStyles = themeCache.get(styles);
        if (cachedResolvedStyles) {
            return cachedResolvedStyles;
        }
    }
    else {
        themeCache = new Map();
        cache.set(themeRef, themeCache);
    }
    var resolvedStyles = walkTreatModule(themeRef, styles);
    themeCache.set(styles, resolvedStyles);
    return resolvedStyles;
};
var walkTreatModule = function (themeRef, styles) {
    var clone = styles.constructor();
    for (var key in styles) {
        var value = styles[key];
        if (typeof value === 'string') {
            clone[key] = resolveClassName(themeRef, value);
        }
        else if (typeof value === 'object') {
            clone[key] = value ? walkTreatModule(themeRef, value) : value;
        }
        else {
            clone[key] = value;
        }
    }
    return clone;
};
