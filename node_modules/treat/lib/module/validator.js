import joi from '@hapi/joi';
import { simplePseudos } from './transformCSS';
var cssPropertiesSchema = joi
    .object()
    .pattern(joi.string().regex(/^[^:@]/), [joi.string(), joi.number()]);
var keyframesSchema = joi.object().pattern(joi.string(), cssPropertiesSchema);
var cssWithKeyframesSchema = cssPropertiesSchema.append({
    '@keyframes': [joi.string(), keyframesSchema],
});
var cssWithSimplePseudos = cssWithKeyframesSchema.append(Object.assign.apply(Object, [{}].concat(simplePseudos.map(function (pseudo) {
    var _a;
    return (_a = {}, _a[pseudo] = cssWithKeyframesSchema, _a);
}))));
var selectorsSchema = joi
    .object()
    .pattern(joi.string(), cssWithKeyframesSchema);
var fullStyle = cssWithSimplePseudos.append({
    selectors: selectorsSchema,
});
var makeQuerySchema = function (valueSchema) {
    return valueSchema
        .append({
        '@media': joi.object().pattern(joi.string(), valueSchema),
    })
        .append({
        '@supports': joi.object().pattern(joi.string(), valueSchema),
    });
};
var fullStyleWithMedia = makeQuerySchema(fullStyle).required();
var globalStyleWithMedia = makeQuerySchema(fullStyle.forbiddenKeys.apply(fullStyle, ['selectors'].concat(simplePseudos))).required();
var validate = function (handler) { return function (value) {
    var error = handler.validate(value).error;
    if (error !== null) {
        throw error;
    }
}; };
export var validateGlobalStyle = validate(globalStyleWithMedia);
export var validateStyle = validate(fullStyleWithMedia);
