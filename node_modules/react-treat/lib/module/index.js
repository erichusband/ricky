import React, { createContext, useContext } from 'react';
import { resolveClassName, resolveStyles, } from 'treat';
var treatThemeContext = createContext(null);
export var TreatProvider = function (_a) {
    var theme = _a.theme, children = _a.children;
    return (React.createElement(treatThemeContext.Provider, { value: theme }, children));
};
export var useTheme = function () {
    var theme = useContext(treatThemeContext);
    if (!theme) {
        throw new Error('No treat theme provided');
    }
    return theme;
};
export var useStyles = function (styles) {
    return resolveStyles(useTheme(), styles);
};
export var useClassName = function (classRef) {
    return resolveClassName(useTheme(), classRef);
};
